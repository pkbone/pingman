[Ping Loss Alert Generation]
action.email.inline = 1
alert.severity = 4
alert.suppress = 0
alert.track = 1
auto_summarize.dispatch.earliest_time = -1d@h
counttype = number of events
cron_schedule = */2 * * * *
description = for allocate almost all alert, time range is set to 4 hour, and the result will be limited into 2 mins. so this script will be run every 2 mins
dispatch.earliest_time = -4h
enableSched = 1
quantity = 0
relation = greater than
search = index=pingman eventtype="*"| streamstats global=f window=2 last(eventtype) as b first(eventtype) as a last(_time) as btime first(_time) as atime by splunk_server source | eval statuschange=if(a==b,0,1) | search statuschange=1 | streamstats global=f window=2 last(_time) as start first(_time) as end by splunk_server source| eval period = atime - btime | eval interval = end - start | table a atime interval source event splunk_server period btime | eval diff=now()| eval diff = if(interval==0, diff-atime, interval) | eval my_hours=floor(diff / 60 / 60)| eval my_minutes = floor(diff / 60 - my_hours * 60) | eval my_seconds = round(diff - my_hours * 60 * 60 - my_minutes * 60, 0) | eval stime = if(my_hours==0, "", if(my_hours==1, my_hours + " hour", my_hours  + " hours")) + " " +  if(my_minutes==0, "", if(my_minutes==1, my_minutes + " minute", my_minutes + " minutes"))+" " + if(my_seconds==0, "", if(my_seconds==1, my_seconds + " second", my_seconds + " seconds")) | eval diff=now() - atime | eval event= " " + if(a=="pingsuccess", if(interval==0,"host is reachable from " + stime + " ago.", "host get reachable for " + stime), if(interval==0, "host cannot be reached from " + stime + " ago.", "host cannot be reached for " + stime)) | fields - my_hours stime my_minutes my_seconds interval | convert ctime(atime) ctime(btime) | rename a as "Event Type" atime as "Event Time" event as "Description" splunk_server as "report by" btime as "Related Event Time" period as Period | search diff < 120 AND "Event Type" = "pingloss"

[Host Recover notification generation]
action.email.inline = 1
alert.severity = 2
alert.suppress = 0
alert.track = 1
auto_summarize.dispatch.earliest_time = -1d@h
counttype = number of events
cron_schedule = */2 * * * *
description = for allocate almost all alert, time range is set to 4 hour, and the result will be limited into 2 mins. so this script will be run every 2 mins
dispatch.earliest_time = -4h
enableSched = 1
quantity = 0
relation = greater than
search = index=pingman eventtype="*"| streamstats global=f window=2 last(eventtype) as b first(eventtype) as a last(_time) as btime first(_time) as atime by splunk_server source | eval statuschange=if(a==b,0,1) | search statuschange=1 | streamstats global=f window=2 last(_time) as start first(_time) as end by splunk_server source| eval period = atime - btime | eval interval = end - start | table a atime interval source event splunk_server period btime | eval diff=now()| eval diff = if(interval==0, diff-atime, interval) | eval my_hours=floor(diff / 60 / 60)| eval my_minutes = floor(diff / 60 - my_hours * 60) | eval my_seconds = round(diff - my_hours * 60 * 60 - my_minutes * 60, 0) | eval stime = if(my_hours==0, "", if(my_hours==1, my_hours + " hour", my_hours  + " hours")) + " " +  if(my_minutes==0, "", if(my_minutes==1, my_minutes + " minute", my_minutes + " minutes"))+" " + if(my_seconds==0, "", if(my_seconds==1, my_seconds + " second", my_seconds + " seconds")) | eval diff=now() - atime | eval event= " " + if(a=="pingsuccess", if(interval==0,"host is reachable from " + stime + " ago.", "host get reachable for " + stime), if(interval==0, "host cannot be reached from " + stime + " ago.", "host cannot be reached for " + stime)) | fields - my_hours stime my_minutes my_seconds interval | convert ctime(atime) ctime(btime) | rename a as "Event Type" atime as "Event Time" event as "Description" splunk_server as "report by" btime as "Related Event Time" period as Period | search diff < 120 AND "Event Type" = "pingsuccess"
